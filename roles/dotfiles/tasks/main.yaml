---
- name: Ensure dotfiles repository is cloned locally as user.
  ansible.builtin.git:
    repo: "{{ dotfiles_src }}"
    dest: "{{ dotfiles_dest }}"
  become: false
  register: git
  tags:
    - dotfiles_git

- name: Ensure dotfiles repository is cloned locally as root.
  ansible.builtin.git:
    repo: "{{ dotfiles_src }}"
    dest: "{{ dotfiles_dest }}"
  tags:
    - dotfiles_git

- name: Install all dotfiles as simple user
  ansible.builtin.script: "{{ dotfiles_dest }}/install.sh"
  become: false
  when: git.changed
  tags:
    - dotfiles_links

- name: Download git-prompt.sh
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    dest: "~/.git-prompt.sh"
    mode: "0644"
  become: false
  when: ansible_facts['os_family'] | lower == 'openbsd'
  tags:
    - dotfiles_git

- name: Select files to be replaced
  ansible.builtin.find:
    paths: ~/
    patterns: "{{ [] | zip_longest(dotfiles_files_root | map('basename'), fillvalue='.') | map('join') | list }}"
    file_type: file
    recurse: false
    use_regex: false
    hidden: true
  register: find_result
  when:
    - dotfiles_files_root is defined
    - dotfiles_files_root is iterable
    - dotfiles_files_root | length > 0
  tags:
    - dotfiles_links

- name: Remove files to be replaced
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ find_result.files | default([]) }}"
  tags:
    - dotfiles_links

- name: Install dotfiles for the root user
  ansible.builtin.file:
    src: "{{ dotfiles_dest }}/{{ item }}"
    dest: ~/.{{ item | basename }}
    state: link
  loop: "{{ dotfiles_files_root }}"
  tags:
    - dotfiles_links
