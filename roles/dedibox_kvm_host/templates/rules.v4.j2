*nat
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
{% for item in dedibox_kvm_host_ipv4_port_mapping %}
# Modify the destination address/port of packets received on port {{ item.protocol }}/{{ item.source_port }}
{% if item.protocol == 'tcp' %}
-A PREROUTING -d  {{ dedibox_kvm_host_phys_iface_ipv4_address }}/32 -p tcp -m tcp --syn --dport {{ item.source_port }}  -j DNAT --to-destination {{item.destination_ip}}:{{item.destination_port}}
{% elif item.protocol == 'udp' %}
-A PREROUTING -d  {{ dedibox_kvm_host_phys_iface_ipv4_address }}/32 -p udp -m udp --dport {{ item.source_port }}  -j DNAT --to-destination {{item.destination_ip}}:{{item.destination_port}}
{% endif %}
{% endfor %}
# Do not masquerade to these reserved address blocks.
-A POSTROUTING -s 192.168.0.0/16 -d 224.0.0.0/24 -j RETURN
-A POSTROUTING -s 192.168.0.0/16 -d 255.255.255.255/32 -j RETURN
# Masquerade all packets going from VMs to the LAN/Internet.
-A POSTROUTING -s 192.168.0.0/16 ! -d 192.168.0.0/16 -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 192.168.0.0/16 ! -d 192.168.0.0/16 -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 192.168.0.0/16 ! -d 192.168.0.0/16 -j MASQUERADE
COMMIT

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
# Allow established traffic to the private subnet.
-A FORWARD -d 192.168.0.0/16 -o {{ dedibox_kvm_host_bridge_iface_name }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# Allow outbound traffic from the private subnet.
-A FORWARD -s 192.168.0.0/16 -i {{ dedibox_kvm_host_bridge_iface_name }} -j ACCEPT
# Allow traffic between virtual machines.
-A FORWARD -i {{ dedibox_kvm_host_bridge_iface_name }} -o {{ dedibox_kvm_host_bridge_iface_name }} -j ACCEPT
# Allow packets that have been forwarded to particular ports on a VM
{% for item in dedibox_kvm_host_ipv4_port_mapping %}
{% if item.protocol == 'tcp' %}
-A FORWARD -d {{ item.destination_ip }}/32 -o {{ dedibox_kvm_host_bridge_iface_name }} -p tcp -m tcp --syn -m conntrack --ctstate NEW --dport {{ item.destination_port }} -j ACCEPT
{% elif item.protocol == 'udp' %}
-A FORWARD -d {{ item.destination_ip }}/32 -o {{ dedibox_kvm_host_bridge_iface_name }} -p udp -m udp --dport {{ item.destination_port }} -j ACCEPT
{% endif %}
{% endfor %}
# Reject everything else.
-A FORWARD -i {{ dedibox_kvm_host_bridge_iface_name }} -j REJECT --reject-with icmp-port-unreachable
-A FORWARD -o {{ dedibox_kvm_host_bridge_iface_name }} -j REJECT --reject-with icmp-port-unreachable
COMMIT
